[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-tele"
version = "0.1.0"
description = "AI Tele FastAPI Project"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # 核心框架
    "fastapi",
    "uvicorn[standard]",
    "sqlalchemy",
    "alembic",
    # 数据验证
    "pydantic>=2.11.7,<3.0.0",
    "pydantic-settings",
    # Web相关
    "python-multipart",
    # 认证和安全
    # 分页和数据库
    "mysqlclient>=2.2.0",
    # 配置和环境
    "python-dotenv",
    # 远程连接
    "asyncssh",
    "websocket-client",
    # 任务队列
    "redis",
    # 定时任务调度
    "apscheduler>=3.10.0",
    # 依赖注入
    # 通用工具
    "numpy",
    "requests",
    "httpx",
    "mutagen",
    "rich",
    "aiofiles",
    "aiomysql>=0.2.0",
    "mypy>=1.18.2",
    "types-aiofiles>=24.1.0.20250822",
    "cos-python-sdk-v5>=1.9.38",
    "types-requests>=2.32.4.20250913",
    "playwright>=1.55.0",
    "markdown>=3.9",
    # Markdown转换相关
    "weasyprint>=62.0",
    "pdfkit>=1.0.0",
    "python-docx>=1.1.0",
    "uv==0.9.2",
]

[project.optional-dependencies]
dev = [
    # 构建工具 - 添加到开发依赖
    "setuptools>=61.0",
    "wheel",

    # 开发工具
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "httpx",
    "black",
    "isort",
    "flake8",
]
audio = [
    "pyaudio>=0.2.11",
    "pydub>=0.25.1",
]

[tool.uv]
link-mode = "copy"

[tool.uv.pip]
index-url = "https://mirrors.aliyun.com/pypi/simple/"

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["tests*", "alembic*", "logs*", "uploads*"]

[tool.black]
line-length = 200
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 200

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--asyncio-mode=auto",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pytest-asyncio>=1.1.0",
    "types-markdown>=3.9.0.20250906",
    "types-reportlab>=4.4.4.20250926",
]
audio = [
    "pydub>=0.25.1",
]
markdown-conversion = [
    # 基础Markdown处理
    "markdown>=3.9",
    "markdown-extensions>=0.0.1",
    # PDF转换
    "weasyprint>=62.0",
    "pdfkit>=1.0.0",
    "reportlab>=4.0.0",
    # Word转换
    "python-docx>=1.1.0",
    # 浏览器自动化
    "playwright>=1.55.0",
    # 其他转换工具
    "pypandoc>=1.11",
    "markdown2>=2.4.0",
]

[tool.mypy]
[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_missing_imports = true

[tool.pylint]
max-line-length = 200
disable = [
    "broad-exception-caught",  # 禁用捕获通用异常的警告
    "trailing-whitespace",     # 禁用尾随空格的警告
]
